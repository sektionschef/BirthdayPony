class paintBro{constructor(e){var o;let t,s;var l,r,i,n,h,y,a,m,g,d,S;let f,p,c;this.buffer=e.buffer,this.elementSizeMin=e.elementSizeMin,this.elementSizeMax=e.elementSizeMax,this.noStroke=e.noStroke,this.strokeColor=e.strokeColor,this.strokeWeight=e.strokeWeight,this.numberQuantisizer=e.numberQuantisizer,this.brushLength=e.brushLength,this.distortionFactor=e.distortionFactor,this.stepSize=e.stepSize,this.elements=[],this.area=Math.round(Math.round(this.buffer.width/DOMINANTSIDE*100)*Math.round(this.buffer.height/DOMINANTSIDE*100))/100,this.shapeNumber=Math.round(this.area*this.numberQuantisizer);for(var L=0;L<this.shapeNumber;L++){t=getRandomFromInterval(0,this.buffer.width),s=getRandomFromInterval(0,this.buffer.height),S=getRandomFromList([-this.stepSize,this.stepSize]),a=getRandomFromList(["first","second","special"]),fxrand()<.2?(a="special",c=getRandomFromList([color(PALETTE.aLevel.fillFirst),color(PALETTE.bLevel.fillFirst),color(PALETTE.cLevel.fillFirst)])):a=fxrand()<.6?"first":"second",g=fxrand()<.25?"vertical":"horizontal";for(var E=0;E<this.brushLength;E++){i=!1,n=!1,h=!1,y=!1,d=getRandomFromList([-this.distortionFactor,this.distortionFactor]),"horizontal"==g?(f=t+E*S+d*E,p=s+d*E):(f=t+d*E,p=s+E*S+d*E),m="base","first"==a?(l=color(PALETTE.base.fillFirst),r=color(PALETTE.base.strokeFirst)):"special"==a?(l=c,r=color("#00000000")):(l=color(PALETTE.base.fillSecond),r=color(PALETTE.base.strokeSecond));for(var T=0;T<dotSystem.polygonsC.length;T++)o=[[dotSystem.polygonsC[T][0].x,dotSystem.polygonsC[T][0].y],[dotSystem.polygonsC[T][1].x,dotSystem.polygonsC[T][1].y],[dotSystem.polygonsC[T][2].x,dotSystem.polygonsC[T][2].y],[dotSystem.polygonsC[T][3].x,dotSystem.polygonsC[T][3].y]],pointInPolygon(o,[t,s])&&(h=!0,m="cLevel");for(h&&("first"==a?(l=color(PALETTE.cLevel.fillFirst),r=color(PALETTE.cLevel.strokeFirst)):"special"==a?(l=c,r=color(PALETTE.base.strokeFirst)):(l=color(PALETTE.cLevel.fillSecond),r=color(PALETTE.cLevel.strokeSecond))),T=0;T<dotSystem.polygonsB.length;T++)o=[[dotSystem.polygonsB[T][0].x,dotSystem.polygonsB[T][0].y],[dotSystem.polygonsB[T][1].x,dotSystem.polygonsB[T][1].y],[dotSystem.polygonsB[T][2].x,dotSystem.polygonsB[T][2].y],[dotSystem.polygonsB[T][3].x,dotSystem.polygonsB[T][3].y]],pointInPolygon(o,[t,s])&&(n=!0,m="bLevel");for(n&&("first"==a?(l=color(PALETTE.bLevel.fillFirst),r=color(PALETTE.bLevel.strokeFirst)):"special"==a?(l=c,r=color(PALETTE.base.strokeFirst)):(l=color(PALETTE.bLevel.fillSecond),r=color(PALETTE.bLevel.strokeSecond))),T=0;T<dotSystem.polygonsA.length;T++)o=[[dotSystem.polygonsA[T][0].x,dotSystem.polygonsA[T][0].y],[dotSystem.polygonsA[T][1].x,dotSystem.polygonsA[T][1].y],[dotSystem.polygonsA[T][2].x,dotSystem.polygonsA[T][2].y],[dotSystem.polygonsA[T][3].x,dotSystem.polygonsA[T][3].y]],pointInPolygon(o,[t,s])&&(i=!0,m="aLevel");i&&("first"==a?(l=color(PALETTE.aLevel.fillFirst),r=color(PALETTE.aLevel.strokeFirst)):"special"==a?(l=c,r=color(PALETTE.base.strokeFirst)):(l=color(PALETTE.aLevel.fillSecond),r=color(PALETTE.aLevel.strokeSecond))),o=[[sunPolygon[0].x,sunPolygon[0].y],[sunPolygon[1].x,sunPolygon[1].y],[sunPolygon[2].x,sunPolygon[2].y],[sunPolygon[3].x,sunPolygon[3].y]],pointInPolygon(o,[f,p])&&(y=!0),y&&(l=highlightColor(l,40),r=highlightColor(r,40)),this.elements.push({elementLayer:m,elementFillColor:l,widthShape:getRandomFromInterval(this.elementSizeMin,this.elementSizeMax),heightShape:getRandomFromInterval(this.elementSizeMin,this.elementSizeMax),strokeSize:this.strokeWeight,elementStrokeColor:r,posBX:f,posBY:p,angle:getRandomFromInterval(0,2*PI)})}}}show(e){for(var o=0;o<this.elements.length;o++)this.elements[o].elementLayer==e&&(this.buffer.push(),this.buffer.fill(this.elements[o].elementFillColor),this.buffer.rectMode(CENTER),this.buffer.strokeWeight(this.strokeWeight),this.buffer.stroke(this.elements[o].elementStrokeColor),this.buffer.translate(this.elements[o].posBX,this.elements[o].posBY),this.buffer.rotate(this.elements[o].angle),this.buffer.rect(0,0,this.elements[o].widthShape,this.elements[o].heightShape),this.buffer.pop())}}