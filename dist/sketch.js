const MODE=1,ALL=!1,NOISESEED=hashFnv32a(fxhash);let canvas,rescaling_width,rescaling_height,PALETTE,PALETTE_LABEL,DOMINANTSIDE,ALLDONE=!1,RESCALINGCONSTANT=800,FRAMEDWIDTH=800,FRAMED=!1,TITLE="Birthday Pony",ARTIST="Stefan Schwaha, @sektionschef",DESCRIPTION="Javascript on html canvas",URL="https://digitalitility.com",YEAR="2022",PRICE="êœ© 1",EDITIONS="365 editions",GRAINAMOUNT=.03,TIMINGSTATE="Start",BRUSHFULLSPEEDMIN=2,BRUSHFULLSPEEDMAX=6,BRUSHFULLSPEED=Math.round(100*getRandomFromInterval(BRUSHFULLSPEEDMIN,BRUSHFULLSPEEDMAX))/100,BRUSHFULLSPEEDLABEL=label_feature(BRUSHFULLSPEED,BRUSHFULLSPEEDMIN,BRUSHFULLSPEEDMAX),CURRENTPIXELDENS=1,ROUGHYPUFFYRANGE=[.1,.2,.3],ROUGHYPUFFY=getRandomFromList(ROUGHYPUFFYRANGE);console.log("ROUGHYPUFFY:"+ROUGHYPUFFY);let BRUSHDIRECTIONLABEL,ROUGHYPUFFYLABEL=label_feature(ROUGHYPUFFY,Math.min(...ROUGHYPUFFYRANGE),Math.max(...ROUGHYPUFFYRANGE)),BRUSHDIRECTION=getRandomFromList([.25,.5,.75]);console.log("BRUSHDIRECTION:"+BRUSHDIRECTION),BRUSHDIRECTIONLABEL=.25==BRUSHDIRECTION?"horizontal":.5==BRUSHDIRECTION?"both":"vertical";const PALETTESYSTEM={Boom:{background:"#8181BB",line:"#17171d4f",base:{fillFirst:"#9D9DCD15",fillSecond:"#9D9DCD15",strokeFirst:"#7f7fda9f",strokeSecond:"#7d7dc7a8",grainColorFirst:"#9c9cd8",grainColorSecond:"#8989c4"},cLevel:{fillFirst:"#4F4F8D15",fillSecond:"#45458515",strokeFirst:"#03031a15",strokeSecond:"#01010815",grainColorFirst:"#5555944f",grainColorSecond:"#4f4f8067"},bLevel:{fillFirst:"#B9B9DF15",fillSecond:"#aeaed315",strokeFirst:"#5a5a6b15",strokeSecond:"#4f4f6615",grainColorFirst:"#8080af38",grainColorSecond:"#b6b6da59"},aLevel:{fillFirst:"#6666A915",fillSecond:"#59599115",strokeFirst:"#2b2b5215",strokeSecond:"#42428815",grainColorFirst:"#40404b38",grainColorSecond:"#1a1a2059"}},Red:{background:"#8B0817",line:"#17171d4f",base:{fillFirst:"#f44c4015",fillSecond:"#f1524715",strokeFirst:"#b12c2771",strokeSecond:"#ac3d2e73",grainColorFirst:"#80140d",grainColorSecond:"#aa0303"},cLevel:{fillFirst:"#8f0c0315",fillSecond:"#7e090115",strokeFirst:"#770a0273",strokeSecond:"#9e130173",grainColorFirst:"#9455551e",grainColorSecond:"#804f4f67"},bLevel:{fillFirst:"#f5585215",fillSecond:"#f75d5d15",strokeFirst:"#f77f7b73",strokeSecond:"#d44b4b73",grainColorFirst:"#af808038",grainColorSecond:"#dab6b659"},aLevel:{fillFirst:"#db2d212c",fillSecond:"#e0302327",strokeFirst:"#be342a73",strokeSecond:"#f31a0b73",grainColorFirst:"#4b404038",grainColorSecond:"#201a1a59"}},"Slummy Yummy":{background:"#747474",line:"#74747431",base:{fillFirst:"#DEDAD415",fillSecond:"#d3cdc515",strokeFirst:"#dedad42a",strokeSecond:"#cfcbc42a",grainColorFirst:"#ccc8c1",grainColorSecond:"#d3cdc5"},cLevel:{fillFirst:"#a39c9215",fillSecond:"#6d686115",strokeFirst:"#8b857b2a",strokeSecond:"#ada5982a",grainColorFirst:"#ada5981e",grainColorSecond:"#d3cbbd67"},bLevel:{fillFirst:"#d2dce015",fillSecond:"#b5cad115",strokeFirst:"#c0d4db2a",strokeSecond:"#daeaf02a",grainColorFirst:"#d2dce038",grainColorSecond:"#b5cad159"},aLevel:{fillFirst:"#add1f015",fillSecond:"#c0d7ee15",strokeFirst:"#98b9d62a",strokeSecond:"#d7e5f32a",grainColorFirst:"#9ab1c538",grainColorSecond:"#a3b6c959"}},Gang:{background:"#1F2B43",line:"#4649527e",base:{fillFirst:"#D7D2CE15",fillSecond:"#ccc4bd15",strokeFirst:"#dfd6ce3d",strokeSecond:"#c7c0bb3d",grainColorFirst:"#D7D2CE38",grainColorSecond:"#afaba759"},cLevel:{fillFirst:"#6C676115",fillSecond:"#6C676115",strokeFirst:"#6c67613d",strokeSecond:"#6c67613d",grainColorFirst:"#4b453d1e",grainColorSecond:"#7c777267"},bLevel:{fillFirst:"#cacae015",fillSecond:"#cacae015",strokeFirst:"#b7b7da3d",strokeSecond:"#cacae03d",grainColorFirst:"#9999aa38",grainColorSecond:"#8c8ca359"},aLevel:{fillFirst:"#4a4e5c15",fillSecond:"#383b4615",strokeFirst:"#36393f3d",strokeSecond:"#393b413d",grainColorFirst:"#4b404038",grainColorSecond:"#201a1a59"}}};function preload(){const e=window.location.search,o=new URLSearchParams(e);o.has("highres")&&(CURRENTPIXELDENS=parseInt(o.get("highres"))),o.has("framed")&&"true"===o.get("framed")&&(FRAMED=!0),FRAMED?(setFrameHTML(),setLabelHTML()):setPlainHTML(),setTagsHTML()}function setup(){noiseSeed(NOISESEED),randomSeed(NOISESEED),scaleDynamically(),canvas=createCanvas(rescaling_width,rescaling_height,WEBGL),canvas.id("badAssCanvas"),FRAMED?canvas.parent("canvasHolderFrame"):canvas.parent("canvasHolderPlain"),cam1=createCamera(),paintBroBuffer=createGraphics(width,height,"WEBGL"),grainBuffer=createGraphics(width,height,WEBGL),grainShader=grainBuffer.createShader(vert,frag),shouldAnimate=!0,brushSystem=new BrushSystem,dotSystem=new drawDotsSystem,sunny=new sunPolygon,paintbro=new paintBro({buffer:paintBroBuffer,elementSizeMin:.01*DOMINANTSIDE,elementSizeMax:.03*DOMINANTSIDE,strokeWeight:.001*DOMINANTSIDE,numberQuantisizer:80,brushLength:10,distortionFactor:.001*DOMINANTSIDE,stepSize:.005*DOMINANTSIDE}),baseNoise=new TexMex({buffer:paintBroBuffer,posX:0,posY:0,elementLayer:"base",elementSizeMin:.001*DOMINANTSIDE,elementSizeMax:.002*DOMINANTSIDE,fillColor:color(PALETTE.base.grainColorFirst),secondaryFillColor:color(PALETTE.base.grainColorSecond),numberQuantisizer:1e3,relCenterX:width/8*getRandomFromList([4,5,6]),relCenterY:height/8*getRandomFromList([2,4,6]),SDevX:width/getRandomFromList([2,3,4]),SDevY:height/2}),cLevelNoise=new TexMex({buffer:paintBroBuffer,posX:0,posY:0,elementLayer:"cLevel",elementSizeMin:.001*DOMINANTSIDE,elementSizeMax:.002*DOMINANTSIDE,fillColor:color(PALETTE.cLevel.grainColorFirst),secondaryFillColor:color(PALETTE.cLevel.grainColorSecond),numberQuantisizer:1e3,relCenterX:width/8*2,relCenterY:height/8*2,SDevX:width/getRandomFromList([3,4,5]),SDevY:height/getRandomFromList([3,4,5])}),bLevelNoise=new TexMex({buffer:paintBroBuffer,posX:0,posY:0,elementLayer:"bLevel",elementSizeMin:.001*DOMINANTSIDE,elementSizeMax:.002*DOMINANTSIDE,fillColor:color(PALETTE.bLevel.grainColorFirst),secondaryFillColor:color(PALETTE.bLevel.grainColorSecond),numberQuantisizer:1e3,relCenterX:width/8*2,relCenterY:height/8*getRandomFromList([3,4,5]),SDevX:width/getRandomFromList([3,4,5]),SDevY:height/4}),aLevelNoise=new TexMex({buffer:paintBroBuffer,posX:0,posY:0,elementLayer:"aLevel",elementSizeMin:.001*DOMINANTSIDE,elementSizeMax:.002*DOMINANTSIDE,fillColor:color(PALETTE.aLevel.grainColorFirst),secondaryFillColor:color(PALETTE.aLevel.grainColorSecond),numberQuantisizer:1e3,relCenterX:width/8*2,relCenterY:height/8*getRandomFromList([3,4,5]),SDevX:width/getRandomFromList([3,4,5]),SDevY:height/3})}function draw(){smooth(),orbitControl(),1==frameCount&&pixelDensity(CURRENTPIXELDENS),30==frameCount&&(paintBroBuffer.background(color(PALETTE.background)),paintbro.show("base"),baseNoise.show(),console.log("base finished"),TIMINGSTATE="base finished",dotSystem.fireBrush("aLevel")),brushSystem.check_all_complete("aLevel")&&"base finished"==TIMINGSTATE&&(paintbro.show("aLevel"),aLevelNoise.show(),console.log("aLevel finished"),TIMINGSTATE="aLevel finished",dotSystem.fireBrush("bLevel")),brushSystem.check_all_complete("bLevel")&&"aLevel finished"==TIMINGSTATE&&(paintbro.show("bLevel"),bLevelNoise.show(),console.log("bLevel finished"),TIMINGSTATE="bLevel finished",dotSystem.fireBrush("cLevel")),brushSystem.check_all_complete("cLevel")&&"bLevel finished"==TIMINGSTATE&&(paintbro.show("cLevel"),cLevelNoise.show(),console.log("cLevel finished"),TIMINGSTATE="cLevel finished",ALLDONE=!0),push(),translate(-width/2,-height/2),image(paintBroBuffer,0,0,paintBroBuffer.width,paintBroBuffer.height),pop(),brushSystem.show(),1==ALLDONE&&(console.log("All done"),noLoop(),fxpreview(),console.warn(Math.round(1e3*fxrand())/1e3))}function mousePressed(){}function applyGrain(){grainBuffer.clear(),grainBuffer.reset(),grainBuffer.push(),grainBuffer.shader(grainShader),grainShader.setUniform("source",canvas),shouldAnimate&&grainShader.setUniform("noiseSeed",frameCount/100),grainShader.setUniform("noiseAmount",GRAINAMOUNT),grainBuffer.rectMode(CENTER),grainBuffer.noStroke(),grainBuffer.rect(0,0,width,height),grainBuffer.pop(),clear(),push(),translate(-width/2,-height/2),image(grainBuffer,0,0),pop()}choosePalette();const vert="\n// Determines how much precision the GPU uses when calculating floats\nprecision highp float;\n\n// Get the position attribute of the geometry\nattribute vec3 aPosition;\n\n// Get the texture coordinate attribute from the geometry\nattribute vec2 aTexCoord;\n\n// The view matrix defines attributes about the camera, such as focal length and camera position\n// Multiplying uModelViewMatrix * vec4(aPosition, 1.0) would move the object into its world position in front of the camera\nuniform mat4 uModelViewMatrix;\n\n// uProjectionMatrix is used to convert the 3d world coordinates into screen coordinates\nuniform mat4 uProjectionMatrix;\n\nvarying vec2 vVertTexCoord;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertTexCoord = aTexCoord;\n}\n",frag="\nprecision highp float;\nvarying vec2 vVertTexCoord;\n\nuniform sampler2D source;\nuniform float noiseSeed;\nuniform float noiseAmount;\n\n// Noise functions\n// https://github.com/patriciogonzalezvivo/lygia/blob/main/generative/random.glsl\nfloat rand(vec2 n) { \n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nvoid main() {\n    // GorillaSun's grain algorithm\n    vec4 inColor = texture2D(source, vVertTexCoord);\n    gl_FragColor = clamp(inColor + vec4(\n        mix(-noiseAmount, noiseAmount, fract(noiseSeed + rand(vVertTexCoord * 1234.5678))),\n        mix(-noiseAmount, noiseAmount, fract(noiseSeed + rand(vVertTexCoord * 876.54321))),\n        mix(-noiseAmount, noiseAmount, fract(noiseSeed + rand(vVertTexCoord * 3214.5678))),\n        0.\n    ), 0., 1.);\n}\n";